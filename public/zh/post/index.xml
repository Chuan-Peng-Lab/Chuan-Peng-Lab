<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | 传鹏的实验室</title>
    <link>https://chuan-peng-lab.netlify.app/zh/post/</link>
      <atom:link href="https://chuan-peng-lab.netlify.app/zh/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><lastBuildDate>Mon, 09 Oct 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://chuan-peng-lab.netlify.app/media/icon_hu3a6db96f210420c7d44d3ddf0142fcf7_129407_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/</link>
    </image>
    
    <item>
      <title>DataPipe：如何免费保存&#43;备份实验数据</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/datapipe/</link>
      <pubDate>Mon, 09 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/zh/post/datapipe/</guid>
      <description>&lt;h1 id=&#34;datapipe如何免费保存备份实验数据&#34;&gt;DataPipe：如何免费保存+备份实验数据&lt;/h1&gt;
&lt;p&gt;你是否因为电脑损害而弄丢过实验数据？明明是线上实验，但数据却不能上传云端？或者你也是OpenScience的拥趸(检索该公众号试试)，想把自己的实验数据放到开放平台 OSF，做出自己的贡献?&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Alt text&#34; srcset=&#34;
               /zh/post/datapipe/imgs/image17_hu5e831f3bce36e448e5d9c4dfdcf089a4_2731618_448600048ef824e08604da92d408cea1.webp 400w,
               /zh/post/datapipe/imgs/image17_hu5e831f3bce36e448e5d9c4dfdcf089a4_2731618_c69181939474e668d2b2af7200514e33.webp 760w,
               /zh/post/datapipe/imgs/image17_hu5e831f3bce36e448e5d9c4dfdcf089a4_2731618_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/datapipe/imgs/image17_hu5e831f3bce36e448e5d9c4dfdcf089a4_2731618_448600048ef824e08604da92d408cea1.webp&#34;
               width=&#34;760&#34;
               height=&#34;570&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;没错，就在今天，这一切可以轻松的完成。今天我要隆重的给大家介绍一个非常好用的数据收集工具——DataPipe。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DataPipe 是一个开放平台，提供REST API接口，可以让你在任何实验程序上把实验数据上传到OSF(Open Science Framework)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你不知什么是 REST API。没关系，你就当他是一个网站，当你访问他，你就可以上传数据，只不过这一切可以用一行简单的代码实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你不知道 OSF。没关系，你就当他是 github 或者一个云盘，可以用来存储你的代码和实验数据等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DataPipe 已经集成到实验编程工具 &lt;a href=&#34;https://www.jspsych.org/7.3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jsPsych&lt;/a&gt; 当中，你可以很方便的在 jsPsych 调用 DataPipe 的API。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你不了解 jsPsych，可以理解为他是类似于 E-prime, psychtoolbox(Matlab), psychopy(Python), OpenSesame的实验编程工具。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此外，它可以方便的用于在线实验，或在线问卷数据的收集。类似于 Qualtrics, Credamo等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你可以点击连接 &lt;a href=&#34;https://www.jspsych.org/7.3/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jsPsych&lt;/a&gt;  进行了解。它使用前端代码 html + js 来实现实验程序的编程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我们回到正题，今天我将以 jspsych 和 psychopy 为例，演示如何使用DataPipe来收集数据，并把数据上传到 osf中。&lt;/p&gt;
&lt;p&gt;后面涉及到的测试材料在这里 &lt;a href=&#34;https://gitee.com/epool/data-pipe_primer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gitee.com/epool/data-pipe_primer&lt;/a&gt; 大家可以自行体验和设置。&lt;/p&gt;
&lt;h2 id=&#34;前提准备&#34;&gt;前提准备&lt;/h2&gt;
&lt;p&gt;在 jspsych 和 psychopy 进行加入 DataPipe 功能前，你需要做如下配置：注册 osf 账号，在 osf 中创建项目；在 DataPipe 中创建项目，连接 osf 的项目，进行一些基本配置。跟着我的步伐，5分钟完成配置。&lt;/p&gt;
&lt;h3 id=&#34;创建osf项目&#34;&gt;创建OSF项目&lt;/h3&gt;
&lt;p&gt;如果你还没有 osf 账号，请 &lt;a href=&#34;https://osf.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://osf.io/&lt;/a&gt; 登陆官网进行简单的注册。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;image.png&#34; srcset=&#34;
               /zh/post/datapipe/imgs/image_hu0a21cc497d224bf5db827d1d480ce2ee_913015_b4994cbdadd66dc60662ee0994f7cf5c.webp 400w,
               /zh/post/datapipe/imgs/image_hu0a21cc497d224bf5db827d1d480ce2ee_913015_530c129d382f77ff543700f777b034ab.webp 760w,
               /zh/post/datapipe/imgs/image_hu0a21cc497d224bf5db827d1d480ce2ee_913015_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/datapipe/imgs/image_hu0a21cc497d224bf5db827d1d480ce2ee_913015_b4994cbdadd66dc60662ee0994f7cf5c.webp&#34;
               width=&#34;760&#34;
               height=&#34;301&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;然后，为了给 DataPipe 的访问权限，我们需要生成&lt;strong&gt;密钥(token)&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%201.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%202.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%203.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%204.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最后，在OSF主页点击“Create Project”就可以创建项目了。注意，你需要复制&lt;strong&gt;项目的编号&lt;/strong&gt;，在下图中。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%205.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%206.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%207.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;在datapipe上创建实验&#34;&gt;在DataPipe上创建实验&lt;/h2&gt;
&lt;p&gt;完成 OSF 的配置后，我们需要对 DataPipe进行配置。&lt;/p&gt;
&lt;p&gt;首先，进入 &lt;a href=&#34;https://pipe.jspsych.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pipe.jspsych.org/&lt;/a&gt;。 进行注册和登陆。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%208.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;之后，将之前 osf 的密钥(token)配置到 DataPipe 中。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%209.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2010.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最后，创建项目（实验），Done。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2011.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2012.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这样你就进入了这个实验的控制面板,可以设置一些实验参数了。有些功能我们暂时用不到，就先不介绍了。&lt;/p&gt;
&lt;p&gt;注意，请一定要复制实验ID备用。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;1696770274540.png&#34; srcset=&#34;
               /zh/post/datapipe/imgs/1696770274540_hub4b5e767f4acf68ea4d71cbb29060dd0_313566_3942a8dda1d098a7503f5bf18f4c0a00.webp 400w,
               /zh/post/datapipe/imgs/1696770274540_hub4b5e767f4acf68ea4d71cbb29060dd0_313566_5204f174a06511bd9d0031bfe76372cd.webp 760w,
               /zh/post/datapipe/imgs/1696770274540_hub4b5e767f4acf68ea4d71cbb29060dd0_313566_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/datapipe/imgs/1696770274540_hub4b5e767f4acf68ea4d71cbb29060dd0_313566_3942a8dda1d098a7503f5bf18f4c0a00.webp&#34;
               width=&#34;760&#34;
               height=&#34;490&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;在实验中集成datapipe&#34;&gt;在实验中集成DataPipe&lt;/h2&gt;
&lt;p&gt;为了能够将数据发送到DataPipe,你需要在实验代码中调用DataPipe的API。如果你在使用jsPsych来编写实验,可以直接使用jsPsychPipe插件调用DataPipe。如果不使用jsPsych,也可以直接通过fetch API调用DataPipe。&lt;/p&gt;
&lt;p&gt;在DataPipe的实验页面,已经提供了不同语言调用DataPipe API的代码示例。选择适合你的语言,根据页面上的指引就可以轻松地在实验中集成DataPipe了。&lt;/p&gt;
&lt;h3 id=&#34;在-jspsych-中进行设置&#34;&gt;在 jspsych 中进行设置&lt;/h3&gt;
&lt;p&gt;具体代码见 &lt;a href=&#34;http://epool.gitee.io/data-pipe_primer/jspsych_exp_test.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jspsych_exp_test.html&lt;/a&gt;。 大家可以下载该模板自行进行更改。&lt;/p&gt;
&lt;p&gt;这里指针对关键代码进行解释。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filename&lt;/code&gt; 为上传的文件名称。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;experiment_id&lt;/code&gt; 为 DataPipe 配置中的 ID。这个非常关键，确保填写正确。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2013.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;大家可以进入 &lt;a href=&#34;http://epool.gitee.io/data-pipe_primer/jspsych_exp_test.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://epool.gitee.io/data-pipe_primer/jspsych_exp_test.html&lt;/a&gt; 进行测试。在本地运行也是相同的，点击下一页就会上传数据。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2014.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;上传的数据如下，名称为之前设置的 &lt;code&gt;filename&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2015.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;在-psychopy-中进行设置&#34;&gt;在 psychopy 中进行设置&lt;/h3&gt;
&lt;p&gt;打开psychopy，我们以自带的 stroop 实验为例。(注意，我是用的psychopy版本为 2023.2.2)&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;屏幕截图 2023-10-08 213712.png&#34; srcset=&#34;
               /zh/post/datapipe/imgs/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE&amp;#43;2023-10-08&amp;#43;213712_hud7d5d384c4e7bb341613d33d8ebc7eae_220279_b0507574f95b64a97a6f06333d682db9.webp 400w,
               /zh/post/datapipe/imgs/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE&amp;#43;2023-10-08&amp;#43;213712_hud7d5d384c4e7bb341613d33d8ebc7eae_220279_234702adc8c5009b7bfa8a0933029df2.webp 760w,
               /zh/post/datapipe/imgs/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE&amp;#43;2023-10-08&amp;#43;213712_hud7d5d384c4e7bb341613d33d8ebc7eae_220279_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/datapipe/imgs/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE&amp;#43;2023-10-08&amp;#43;213712_hud7d5d384c4e7bb341613d33d8ebc7eae_220279_b0507574f95b64a97a6f06333d682db9.webp&#34;
               width=&#34;760&#34;
               height=&#34;339&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;然后，添加 code 模块。并进行相应的设置，也就是最关键的，实验ID，文件名和数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 python 中可以通过 &lt;code&gt;thisExp.getJSON()&lt;/code&gt; 获取数据。 这里将数据保存为 json，你也可以自行转化为 csv。&lt;strong&gt;注意，在我自己的测试中，python 代码会遇到 SSL 错误。所以我使用 js 的实现方式，见下方。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 js code 中，可以通过 &lt;code&gt;psychoJS.experiment.getJSON();&lt;/code&gt;获取数据。注意：js code 需要将实验全部转化为 js + html 后再游览器里运行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;imgs/image%2016.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;最后，运行实验 (注意，我运行的 html 的实验程序而不是 python 代码)就可以上传数据了。&lt;/p&gt;
&lt;h2 id=&#34;额外阅读发布实验&#34;&gt;额外阅读：发布实验&lt;/h2&gt;
&lt;p&gt;把编写好的实验文件发布到网上,以便参与者可以访问。发布实验的方式很多,但我这里推荐使用GitHub Pages 或者 Gitee Pages (就像我提供的那个仓库一样),因为它完全免费,使用非常方便。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;首先,在GitHub上创建一个新的仓库。在仓库的设置页面,打开GitHub Pages功能,选择从main分支部署。这样就可以通过&lt;code&gt;https://[your username].github.io/[your repository name]&lt;/code&gt;来访问你的实验页面了。最后,将你的实验文件上传到仓库中,这样参与者就可以访问了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你的HTML文件不是index.html,那么需要在URL后面加上HTML文件名,比如&lt;code&gt;https://[your username].github.io/[your repository name]/experiment.html&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果使用的是 psychopy 也可以通过 pavlovia.org 来进行线上实验的部署。&lt;/p&gt;
&lt;h2 id=&#34;额外阅读配置实验&#34;&gt;额外阅读：配置实验&lt;/h2&gt;
&lt;p&gt;在控制面板上,你可以启用DataPipe的一些高级功能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;条件分配:可以向DataPipe请求下一个条件编号,用于在多条件实验中指派参与者到不同的条件中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据验证:在将数据发往OSF之前,先检查数据的格式是否正确。这可以避免误传或恶意传输错误数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;会话上限:限制每次实验收集的数据条数上限,也是为了避免误传或恶意传输大量无效数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议根据实验需要谨慎启用这些功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料 source:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pipe.jspsych.org/homepipe.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pipe.jspsych.org/homepipe.png&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pipe.jspsych.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pipe.jspsych.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;De Leeuw, J. R. (2023). DataPipe: Born-open data collection for online experiments. &lt;em&gt;Behavior Research Methods&lt;/em&gt;. &lt;a href=&#34;https://doi.org/10.3758/s13428-023-02161-x&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.3758/s13428-023-02161-x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>如何安装HDDM(基于windows下 docker 和 linux)</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/</link>
      <pubDate>Wed, 14 Jun 2023 13:01:27 +0800</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/</guid>
      <description>&lt;p&gt;本文将介绍两种在 windows 平台下安装 HDDM(0.9.8) 的方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要通过 wsl2 安装 docker 或者 linux 环境&lt;/li&gt;
&lt;li&gt;然后再在 docker 或者 linux 环境下安装 HDDM&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;通过-docker-部署-hddm&#34;&gt;通过 docker 部署 HDDM&lt;/h1&gt;
&lt;p&gt;首先，安装 docker&lt;/p&gt;
&lt;p&gt;下载 docker，有 600M
&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker: Accelerated, Containerized Application Development&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__hu42575f5ebce503a8d25d2bb51b326f88_107718_f454fd8729183b807f7a25dd9512ddea.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__hu42575f5ebce503a8d25d2bb51b326f88_107718_90c23abea89dad254b26e0e76d538756.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__hu42575f5ebce503a8d25d2bb51b326f88_107718_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__hu42575f5ebce503a8d25d2bb51b326f88_107718_f454fd8729183b807f7a25dd9512ddea.webp&#34;
               width=&#34;760&#34;
               height=&#34;275&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__1_hu14b656de2d5a1fe6f317d34c4f699b23_177090_e0a709fc07a34ed6d58166e40c61af3a.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__1_hu14b656de2d5a1fe6f317d34c4f699b23_177090_0c721ca067122856ac500b79e8440c41.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__1_hu14b656de2d5a1fe6f317d34c4f699b23_177090_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__1_hu14b656de2d5a1fe6f317d34c4f699b23_177090_e0a709fc07a34ed6d58166e40c61af3a.webp&#34;
               width=&#34;760&#34;
               height=&#34;517&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

注意：Windows 10 版本 2004 或更高版本才能使用 wsl2。 可以在命令行中使用 winver 查看版本号。
如果版本低于 2004，请不要勾选 wsl2，此时可以使用 Hyper-V 来运行 docker 环境。
如果不存在 wsl2，可以参考该安装方法 &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__9_hub9d84c4b51173d382eed7cc164baf271_545009_6f067c299b7948cecc90525c3b282a97.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__9_hub9d84c4b51173d382eed7cc164baf271_545009_1bba4762e24b9dbb82dc4161ac9e750d.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__9_hub9d84c4b51173d382eed7cc164baf271_545009_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__9_hub9d84c4b51173d382eed7cc164baf271_545009_6f067c299b7948cecc90525c3b282a97.webp&#34;
               width=&#34;760&#34;
               height=&#34;458&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__2_hu5afa50073fd1b4fb06fa791b3c9c4646_289372_3c5fe4f11e1a98ec0ddd4b2aeaf06eb1.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__2_hu5afa50073fd1b4fb06fa791b3c9c4646_289372_bb2fdaeec7edcffbbe1688b1a9635e88.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__2_hu5afa50073fd1b4fb06fa791b3c9c4646_289372_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__2_hu5afa50073fd1b4fb06fa791b3c9c4646_289372_3c5fe4f11e1a98ec0ddd4b2aeaf06eb1.webp&#34;
               width=&#34;760&#34;
               height=&#34;509&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

由于只能装 C 盘，所以直接点 &amp;ldquo;ok&amp;rdquo; 就开始安装了。
大概安装 2-3分钟&lt;/p&gt;
&lt;p&gt;如果提醒 &amp;ldquo;log out&amp;rdquo;，就需要注销电脑，请注意。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__3_hu60f81e9d61881b7532bc6268f9d238b0_239621_a7fa640a761d37dc04fa117f348c0650.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__3_hu60f81e9d61881b7532bc6268f9d238b0_239621_f1c246b0bdea3b48cc9770614905436a.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__3_hu60f81e9d61881b7532bc6268f9d238b0_239621_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__3_hu60f81e9d61881b7532bc6268f9d238b0_239621_a7fa640a761d37dc04fa117f348c0650.webp&#34;
               width=&#34;760&#34;
               height=&#34;540&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;注销或重启后，点击&amp;quot;接受&amp;quot;协议即可。
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__10_hu3781274cf8cda934e65a2dfac00c95a7_612058_c61e406e83afeadd4eea59922bc5b856.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__10_hu3781274cf8cda934e65a2dfac00c95a7_612058_500e51d286d1fac228625ffd40e07a91.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__10_hu3781274cf8cda934e65a2dfac00c95a7_612058_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__10_hu3781274cf8cda934e65a2dfac00c95a7_612058_c61e406e83afeadd4eea59922bc5b856.webp&#34;
               width=&#34;760&#34;
               height=&#34;467&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;docker-设置--安装-hddm&#34;&gt;docker 设置 + 安装 HDDM&lt;/h2&gt;
&lt;p&gt;在设置-&amp;gt;安装后选择启用WSL2引擎
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__11_hu329bb966a89f4abf724583327b7a677d_152351_d67e10fd36fe63060d7573eac0031384.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__11_hu329bb966a89f4abf724583327b7a677d_152351_ef1e68e05f4ddb8f6c68948969a29aef.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__11_hu329bb966a89f4abf724583327b7a677d_152351_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__11_hu329bb966a89f4abf724583327b7a677d_152351_d67e10fd36fe63060d7573eac0031384.webp&#34;
               width=&#34;760&#34;
               height=&#34;434&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;正式安装-hddm&#34;&gt;正式安装 HDDM&lt;/h3&gt;
&lt;p&gt;之后就可以在wsl命令行中使用docker了。
找到 HDDM docker
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__13_huc64be0d3283d9b308ef061b3358387d7_172633_03c0f28857e399f927e111abf97353b6.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__13_huc64be0d3283d9b308ef061b3358387d7_172633_e2801f8e78d62f384d644de69f9e900f.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__13_huc64be0d3283d9b308ef061b3358387d7_172633_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__13_huc64be0d3283d9b308ef061b3358387d7_172633_03c0f28857e399f927e111abf97353b6.webp&#34;
               width=&#34;760&#34;
               height=&#34;434&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可直接点解 pull&lt;/li&gt;
&lt;li&gt;也可以运行命令 &lt;code&gt;docker pull hcp4715/hddm -o /path/to/my/images&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其中，-o 可以设置储存的&lt;strong&gt;相对位置&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;docker-启动-hddm-镜像&#34;&gt;docker 启动 HDDM 镜像&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# windows
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it --rm --cpus=4 -v /d/hcp4715/hddm_docker:/home/jovyan/work -p 8888:8888 hcp4715/hddm jupyter notebook 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# Ubantu
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it --rm --cpus=4 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-v /home/hcp4715/hddm_docker:/home/jovyan/work \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-p 8888:8888 hcp4715/hddm:0.8 jupyter notebook
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__5_hu88a8fee882960b116ee652d7211cb56e_184861_79777cb7ff4e8f4bbce36b98a6dbd007.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__5_hu88a8fee882960b116ee652d7211cb56e_184861_f8f647a16699b7b6d1aa9f7d395efacb.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__5_hu88a8fee882960b116ee652d7211cb56e_184861_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__5_hu88a8fee882960b116ee652d7211cb56e_184861_79777cb7ff4e8f4bbce36b98a6dbd007.webp&#34;
               width=&#34;760&#34;
               height=&#34;396&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;也可以通过界面操作启动 
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__6_hu94389e52d74f504cb1d5eaa77326bff0_61811_660a56cd1a169ae9f4b46f55af2d872b.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__6_hu94389e52d74f504cb1d5eaa77326bff0_61811_0bec5dd19f5001f9d06071c134175229.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__6_hu94389e52d74f504cb1d5eaa77326bff0_61811_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__6_hu94389e52d74f504cb1d5eaa77326bff0_61811_660a56cd1a169ae9f4b46f55af2d872b.webp&#34;
               width=&#34;760&#34;
               height=&#34;249&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;新建一个 notebook
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__7_hu853c431e018496eca23204326d1f2c43_52225_6a4ef1e952260b1cb1f6f61b49ed90ae.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__7_hu853c431e018496eca23204326d1f2c43_52225_85ee46047dc7d9e84cf2ccb483daa109.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__7_hu853c431e018496eca23204326d1f2c43_52225_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__7_hu853c431e018496eca23204326d1f2c43_52225_6a4ef1e952260b1cb1f6f61b49ed90ae.webp&#34;
               width=&#34;760&#34;
               height=&#34;174&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;导入 hddm 进行测试
















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;&#34; srcset=&#34;
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__8_hu126ea05e2d592fb5afeadafcde195cc0_208547_1594ebe77145eec53970dbe45ddbd56f.webp 400w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__8_hu126ea05e2d592fb5afeadafcde195cc0_208547_4c584d3827e39730e2b2244bcedf5b3b.webp 760w,
               /zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__8_hu126ea05e2d592fb5afeadafcde195cc0_208547_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://chuan-peng-lab.netlify.app/zh/post/hddm_installation_tutorial/HDDM%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B__8_hu126ea05e2d592fb5afeadafcde195cc0_208547_1594ebe77145eec53970dbe45ddbd56f.webp&#34;
               width=&#34;760&#34;
               height=&#34;573&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;通过-ubuntu-1804-部署-hddm&#34;&gt;通过 Ubuntu-18.04 部署 HDDM&lt;/h1&gt;
&lt;p&gt;以 windows 系统下，使用 wsl2 + ubuntu 系统安装 hddm 为例。&lt;/p&gt;
&lt;p&gt;首先确保系统已经安装 Windows Subsystem for Linux 2 (WSL2) ，具体安装方法可以参考 &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/wsl/install-win10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --install -d Ubuntu-18.04
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;注意，此时可能需要设置linux系统账号和密码。&lt;/li&gt;
&lt;li&gt;注意，输入密码时并不会显示，请输入完成后直接点击回车。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(可选)：由于 linux 子系统默认安装在 c 盘。因此，可以将起移动到其他磁盘中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 导出子系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --export Ubuntu-18.04 D:&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;docker&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;wsl-Ubuntu-18.04.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 关闭子系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --shutdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 注销(删除)子系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --unregister Ubuntu-18.04
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 导入系统文件到其他磁盘&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --import Ubuntu-18.04 d:&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;docker&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;wsl2_ubuntu1804 d:&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;docker&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;wsl-Ubuntu-18.04.tar --version &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 注意，第一个路径为新的安装路径，第二路径为导出的系统文件，--version 2 表明了后端为 wsl2。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 启动系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl -d Ubuntu-18.04
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装依赖&#34;&gt;安装依赖&lt;/h2&gt;
&lt;p&gt;由于 HDDM ，包括起依赖 pymc, ssms 需要进行编译。因此我们需要提前配置好环境，包括 GCC、Gfortran。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install gcc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install gfortran
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install build-essential
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-miniconda&#34;&gt;安装 Miniconda&lt;/h2&gt;
&lt;p&gt;之后，我们需要安装 python 环境，最好的方式是通过 conda 进行 Python 环境的配置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 下载 miniconda&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 可自行去官网选择其他版本，比如 &amp;lt;https://repo.anaconda.com/miniconda/Miniconda3-py37_4.12.0-Linux-x86_64.sh&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 设置权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod +x Miniconda3-latest-Linux-x86_64.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装 miniconda&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./Miniconda3-latest-Linux-x86_64.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 记得看完协议后 yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 进入 conda 环境&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这一段代码是安装 Miniconda，它是一个流行的 Python 包管理器和环境管理器。安装 Miniconda 后，我们可以使用它来安装 Python 和其他必要的包。&lt;/p&gt;
&lt;p&gt;(可选)设置国内镜像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# (可选)配置国内镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda config --set show_channel_urls yes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 等同于打开 ~/.condarc文件   (sudo gedit ~/.condarc)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 可以删除 - defaults 选项&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建并激活虚拟环境--安装-hddm-和其它必要的包&#34;&gt;创建并激活虚拟环境 + 安装 HDDM 和其它必要的包&lt;/h2&gt;
&lt;p&gt;最后，创建并激活名为 hddm 的虚拟环境。虚拟环境是一种将 Python 依赖项隔离开的机制，可以让我们在同一系统上管理多个 Python 环境。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda create -n hddm &lt;span class=&#34;nv&#34;&gt;python&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;3.9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;conda activate hddm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 HDDM 相关包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install &lt;span class=&#34;nv&#34;&gt;numpy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;1.22.4 -i &amp;lt;https://pypi.tuna.tsinghua.edu.cn/simple&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://gitee.com/epool/pymc2.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://gitee.com/epool/kabuki.git -i &amp;lt;https://pypi.tuna.tsinghua.edu.cn/simple&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://gitee.com/epool/ssm-simulators.git -i &amp;lt;https://pypi.tuna.tsinghua.edu.cn/simple&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install git+https://gitee.com/epool/hddm.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;测试-hddm-是否成功安装&#34;&gt;测试 hddm 是否成功安装：&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;hddm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen_rand_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subjs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HDDM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;(可选)： 安装 torch，以使用 hddm 中的 &lt;a href=&#34;https://elifesciences.org/articles/65074&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LANs&lt;/a&gt; 方法，即基于神经网络(neural network) + 贝叶斯近似(Approximate Bayesian Computation, ABC)的参数估计方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注意，安装前请 &lt;code&gt;nvcc --version&lt;/code&gt;, &lt;code&gt;nvidia-smi&lt;/code&gt; 查看CUDA版本和CUDA工具包的版本号，以正确下载对应项 pytorch 版本。&lt;/li&gt;
&lt;li&gt;此外，最新的 pytorch 2.0 似乎不持支 HDDM。请使用更低的pytorch版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.11.0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torchvision&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.12.0&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torchaudio&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.11.0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pypi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuna&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tsinghua&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 安装 arviz 方便数据操作与绘图&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arviz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pypi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuna&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tsinghua&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 由于安装以上扩展包后，依赖会发生变化，建议重新安装 hddm 和 numpy等扩展包。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gitee&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;epool&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pip&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numpy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.22.4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pypi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tuna&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tsinghua&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edu&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;simple&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# pip install pymc ssms --no-cache-dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试 LANs 是否成功安装以及可以成功运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;conda&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;activate&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;hddm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;params&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen_rand_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;subjs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ddm&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hddm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HDDMnn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sample&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gen_stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;其他&#34;&gt;其他&lt;/h2&gt;
&lt;h3 id=&#34;可选配置数据和镜像源的存放位置--镜像源&#34;&gt;可选：配置数据和镜像源的存放位置 + 镜像源&lt;/h3&gt;
&lt;p&gt;配置数据和镜像源的存放位置 + 镜像源, 这里配置的官方镜像，大家可以自行配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;也可在 &lt;code&gt;C:\Users\&amp;lt;UserName&amp;gt;\.docker\daemon.json&lt;/code&gt; 中进行设置&lt;/li&gt;
&lt;li&gt;其中，&lt;code&gt;&amp;quot;data-root&amp;quot;:&amp;quot;d\\docker&amp;quot;&lt;/code&gt; 设定了数据的存放位置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;registry-mirrors&amp;quot;&lt;/code&gt; 设置了镜像源&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;builder&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;gc&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;defaultKeepStorage&amp;#34;: &amp;#34;20GB&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &amp;#34;enabled&amp;#34;: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;experimental&amp;#34;: false,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;features&amp;#34;: {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;buildkit&amp;#34;: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;data-root&amp;#34;:&amp;#34;d\\docker&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &amp;#34;registry-mirrors&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	  &amp;#34;https://registry.docker-cn.com&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;../../../zh/post/HDDM_Installation_tutorial/HDDM%e5%ae%89%e8%a3%85%e6%95%99%e7%a8%8b__12.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h3 id=&#34;可选将-docker-移除-c-盘以节省空间&#34;&gt;可选：将 docker 移除 C 盘，以节省空间&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --export docker-desktop D:\docker\docker-desktop.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --export docker-desktop-data D:\docker\docker-desktop-data.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --export Ubuntu-22.04 D:\docker\Ubuntu-22.04.tar
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --unregister docker-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --unregister docker-desktop-data
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --unregister Ubuntu-22.04
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --import docker-desktop D:\docker\docker-desktop D:\docker\docker-desktop.tar --version 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --import docker-desktop-data D:\docker\docker-desktop-data D:\docker\docker-desktop-data.tar --version 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wsl --import Ubuntu-22.04 D:\Ubuntu_2204 D:\docker\Ubuntu-22.04.tar --version 2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Most data are available upon request: A case report</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/post_230520/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/zh/post/post_230520/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This post is written by Mengzhen Hu&lt;/em&gt;&lt;br /&gt;
&lt;br&gt;
Open data is a growing trend among academic journals. Authors can either posit their data on an open repository or leave a statement “Data is available upon (reasonable) request”. Recently, a few papers checked whether “Data is available upon request”. A recent preprint in social psychology, among other published studies, depicted a quit bleak picture that “Data is not available upon request” (Gabelica et al., 2022; Hussey, 2023; Tedersoo et al., 2021).
To add some anecdote data to the topic about “Data available upon request” statement, we also share our experience in request data here.&lt;/p&gt;
&lt;div id=&#34;background&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Background&lt;/h3&gt;
&lt;p&gt;I am involved in two ongoing and interconnected projects. The first project focuses on conducting a meta-analysis of articles that have employed the Self-perceptual matching task (SPMT) paradigm. The second project aims to assess the reliability of the SPMT paradigm by reanalyzing research data in published studies. To strengthen the persuasiveness of our findings, the second project requires us to search for publicly available data within the database established from the first project (see our preregistration: &lt;a href=&#34;https://osf.io/zv628&#34; class=&#34;uri&#34;&gt;https://osf.io/zv628&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-datasets-are-available-after-2018&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More datasets are available after 2018&lt;/h3&gt;
&lt;p&gt;Our meta-analysis database covers a total of 136 articles citing Sui et al. (2012) from 2013 to 2021 (it should be noted that articles from 2021 may not be included in the database). Among these 136 articles, only 27 claim to have publicly available data. Within these 27 articles, 21 directly provide original data through links in their papers. However, out of these 21 articles, one of them includes an OSF address in their paper, yet it does not contain any data. Furthermore, the remaining 6 articles mention that “Data is available upon request.”&lt;/p&gt;
&lt;img src=&#34;230520_fig1.png&#34; /&gt;
&lt;p style=&#34;text-align: center;&#34;&gt;
Figure 1. Number of Paper with or without open data
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;more-open-data-than-upon-request&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More open data than “upon request”&lt;/h3&gt;
&lt;p&gt;In our reliability project, we selected articles that are only slightly deviated from the original paradigm. That said, we need to get access to data from 14 articles (see our preregistration for details).
Among these articles, 9 of them provided links in papers. One of the nine links was empty. We reached out to authors via email, so far, no changes on OSF page.
The remaining 5 articles stated that “Data is available upon request”.&lt;/p&gt;
&lt;img src=&#34;230520_fig2.png&#34; /&gt;
&lt;p style=&#34;text-align: center;&#34;&gt;
Figure 2. Data is already public or upon request
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;of-data-are-available-upon-request&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;60% of data are available upon request&lt;/h3&gt;
&lt;p&gt;For those 5 papers, we sent emails and received responses from each author. Among them, three authors (60%) directly provided trial-level data, allowing us to use this data for our purpose. Additionally, two authors provided average values of participants under different experimental conditions.
In a sense, all the articles claiming ‘Data is available upon request’ have provided us with data, though not all data are useful for our purpose.&lt;/p&gt;
&lt;img src=&#34;230520_fig3.png&#34; /&gt;
&lt;p style=&#34;text-align: center;&#34;&gt;
Figure 3. Feedback Data After Request
&lt;/p&gt;
&lt;p&gt;Overall, the process of requesting data from original authors was relatively smooth, with the majority of authors responding promptly and being willing to share their data. Although two authors provided only individuals’ summary data due to various reasons, these data might be of use for meta-analysis.
In our experience, most of authors have a positive attitude towards data sharing and are willing to respond to our requests. However, not all trial-level data are available, as some authors may encounter technical issues or lack of time.&lt;br /&gt;
&lt;br&gt;
As an early career researcher who request data for the first time, I have learned three lessons. (1), write the emails well. I refer the article published in Science (Gruber et al., 2020) on how to write emails. (2), provide as much information about why you need the data as possible. In our case, our protocol and code are already open on GitHub (&lt;a href=&#34;https://github.com/Chuan-Peng-Lab/ReliabilitySPE&#34; class=&#34;uri&#34;&gt;https://github.com/Chuan-Peng-Lab/ReliabilitySPE&lt;/a&gt;), and we included it in all our emails. (3), update the authors’ email through searching. As mentioned by Hussey (2023) in their article, the email addresses provided in many papers may be incorrect and unable to reach the authors. We searched for authors’ information on Google Scholar and found their latest publications and obtain their currently used email address.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reference&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Gabelica, M., et al. (2022). Many researchers were not compliant with their published data sharing statement: a mixed-methods study. Journal of Clinical Epidemiology, 150, 33-41. &lt;a href=&#34;https://doi.org/10.1016/j.jclinepi.2022.05.019&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1016/j.jclinepi.2022.05.019&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gruber, J., et al. (2020). A scientist’s guide to email etiquette. Science. &lt;a href=&#34;https://doi.org/10.1126/science.caredit.abb2664&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1126/science.caredit.abb2664&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hussey, I. (2023). Data is not available upon request. &lt;a href=&#34;https://psyarxiv.com/jbu9r/&#34; class=&#34;uri&#34;&gt;https://psyarxiv.com/jbu9r/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sui, J., et al. (2012). Perceptual effects of social salience: Evidence from self-prioritization effects on perceptual matching. Journal of experimental psychology. Human perception and performance, 38(5), 1105-1117. &lt;a href=&#34;https://doi.org/10.1037/a0029792&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1037/a0029792&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tedersoo, L., et al. (2021). Data sharing practices and data availability upon request differ across scientific disciplines. Scientific data, 8(1), 192. &lt;a href=&#34;https://doi.org/10.1038/s41597-021-00981-0&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1038/s41597-021-00981-0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>加入我们</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/join-us/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0000</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/zh/post/join-us/</guid>
      <description>&lt;p&gt;南京师范大学2024年接收硕士推免生的招生工作开始了，详情见&lt;a href=&#34;https://mp.weixin.qq.com/s/PmpkZ3lGTVbSZ5dBZNjcOA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;南师研招&lt;/a&gt;，欢迎感兴趣的小伙伴加入Meta Self Lab~&lt;/p&gt;
&lt;h2 id=&#34;一导师简介&#34;&gt;一、导师简介&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;胡传鹏教授、博士生导师， 2017年于清华大学心理学系获得博士学位，2017 ~ 2020在德国莱布尼茨心理韧性研究所进行博士后研究。研究兴趣包括元科学(metascience)、认知建模和社会认知。以第一/通讯作者在Science Bulletin、Neuroscience &amp;amp; Beiobehavioral Reviews、科学通报等期刊发表中英论文22篇。担任学术期刊Advances in Methods and Practices in Psychological Science (影响因子 15.8)、Scientific Reports (影响因子 4.9)和Collabra: Psychology（影响因子 3）的编委，为Royal Society Open Science; Social Psychological and Personality Science等十余期刊审稿人。发起并主编OpenScience学术公众号，推广开放科学和可重复性的理念；联合创办了欧洲地区的华人心理与脑科学学会（Chinese Association for Psychological &amp;amp; Brain Science)。参与多项国际关于可重复性问题的大型合作项目，项目结果发表在Nature, Nature Human Behavior等。读博期间，完成过一次北京马拉松，是清华大学登山队（2014）队员，参与多次高海拔登山活动。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./hcp.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;二课题组简介&#34;&gt;二、课题组简介&lt;/h2&gt;
&lt;p&gt;&lt;br&gt;本小组对人类如何处理与自我相关的信息感兴趣，采用“3M”方法:元科学(meta science)、(认知)建模(cognitive modeling)和(心理)测量(psychological measurement)。我们也在尝试将“3M”方法应用于现实世界中的心理健康问题。&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./3m.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br&gt;本小组试图打造一个立足于中国现状，同时也国际化的研究团队。团队气氛上力图平等与自由。随着与研究生相处经验的增加，以及对教职员工作内容的熟悉，本人也慢慢更加清楚需要什么样的团队成员的加入，能够更加清晰透明地表达自己对未来团队成员的一些预期。以下是三点比较重要的预期。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;第一，平等真诚的沟通。本小组尽力创造一个平等、开放、共享的学术交流氛围。维持这个氛围也需要年轻的团队成员能够平等、自信、真诚地表达自己的想法和观点，需要大家的相互尊重。因此，希望未来的团队成员，少一些传统的师生观，多一些以成年人平等相处的态度，把团队每个成员当作一个平等、正常的他人来对待，相互尊重、合作共赢（包括对我本人）。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;第二，强烈的求知欲和好奇心。本小组虽然有承担学院培养研究生的义务，但我们不上于此。我们希望成为一个能够探索人类知识边界的团队，一个为科学共同体有贡献的团队，以及一个培养未来科学家的团队。因此，我希望未来的成员对探索未知有着浓厚的兴趣和强烈的求知欲，能够享受纯粹的智识的快乐（intellectual fun）。正如欣赏音乐、诗歌或大自然那样，纯粹地欣赏人类知识的乐趣。这既是奢求也并非奢求。是奢求是因为现在年轻人更“卷”，压力非常大，可能无暇考虑纯粹的智识快乐；并非奢求是因为，我相信总有一些人保持着这种纯粹的智识的追求，并且在寻找一个合适的环境。如果你是后面这一类人，本小组非常欢迎你！如果你是在外界种种因素之下而想要获得一个硕士/博士学位，请慎重考虑，不要加入本小组！&lt;/p&gt;
&lt;p&gt;&lt;br&gt;第三，较强的动手能力与编程能力。心理学作为一个交叉学科，不同的研究者/团队处在从人文到理科甚至工科的不同光谱之中。本小组的位置是偏向理科一侧，本小组的大部分研究工作对编程和统计有一定的要求，我们的协作方式也越来越多地使用代码（如GitHub）。因此，希望未来的团队成员具备相关的编程基础（如python, R, matlab, c, c++, ）。至少，应该对学习相关的知识有着积极主动的态度，而非排斥与回避。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;2024年，本小组将有2～3名学术硕士生名额，可能会有一名博士生名额。如果你觉得自己对本小组的研究主题、研究取向和研究的气氛均感兴趣，也符合上述三个方面的期望，非常欢迎你尽早联系我并讨论加入的可能性。尤其是对于想保研/考研加入的同学，欢迎尽早联系我，了解我们小组的风格，确定是否合适。&lt;/p&gt;
&lt;h2 id=&#34;三联系方式&#34;&gt;三、联系方式&lt;/h2&gt;
&lt;p&gt;请将如下材料：&lt;br&gt;
1）简历
2）动机陈述&lt;br&gt;
发至邮箱 &lt;a href=&#34;mailto:hcp4715@hotmail.com&#34;&gt;hcp4715@hotmail.com&lt;/a&gt;&lt;br&gt;
邮件主题为“未来研究生申请”以表明意向。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to install and use HDDM</title>
      <link>https://chuan-peng-lab.netlify.app/zh/post/2019-04-29-how-to-install-and-use-hddm/</link>
      <pubDate>Mon, 29 Apr 2019 02:13:27 +0800</pubDate>
      <guid>https://chuan-peng-lab.netlify.app/zh/post/2019-04-29-how-to-install-and-use-hddm/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Feburary 14, 2021 update: Please note that this blog post was outdated because of the updates of Anaconda/miniconda.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;August 2020 update: I&amp;rsquo;ve created a &lt;a href=&#34;https://hub.docker.com/r/hcp4715/hddm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HDDM docker image&lt;/a&gt;, which can be easily installed and used after installing &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;HDDM is a python package for drift diffusion model (DDM, see &lt;a href=&#34;http://ski.clps.brown.edu/hddm_docs/%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ski.clps.brown.edu/hddm_docs/)&lt;/a&gt;. I used it to decompose the reaction time and accuracy data in my recent manuscript: &lt;a rel=&#34;noreferrer noopener&#34; aria-label=&#34;Good Me Bad Me: Does Valence Influence Self-Prioritization During Perceptual Decision-Making (opens in a new tab)&#34; href=&#34;https://psyarxiv.com/9fczh&#34; target=&#34;_blank&#34;&gt;Good Me Bad Me: Does Valence Influence Self-Prioritization During Perceptual Decision-Making&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are a few tips on how to install and use HDDM, in case that you plan to replicate my analyses using the code and data I share &lt;a rel=&#34;noreferrer noopener&#34; aria-label=&#34;here on Github (opens in a new tab)&#34; href=&#34;https://github.com/hcp4715/moralSelf_ddm&#34; target=&#34;_blank&#34;&gt;here on Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The targeted reader of this post are Windows users. (I assume that for most Linux users, you, in the most cases, can figure out how to install and use this package, at least with the help from the online forum (&lt;a href=&#34;https://groups.google.com/forum/#!forum/hddm-users%29%29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://groups.google.com/forum/#!forum/hddm-users))&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My system information: Win 10 pro, 64 bit, 16 GB RAM&lt;/p&gt;
&lt;h3 id=&#34;step-1-prepare-the-python-environment&#34;&gt;Step 1: prepare the python environment:&lt;/h3&gt;
&lt;p&gt;1.1. Download and install Anaconda 3.6 or 3.7 from &lt;a href=&#34;https://www.anaconda.com/distribution/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.anaconda.com/distribution/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;1.2. Create virtue python 3.5 environment.&lt;/p&gt;
&lt;p&gt;To do that, you need first run the &lt;strong&gt;&lt;em&gt;Anaconda Prompt&lt;/em&gt;&lt;/strong&gt;, which will be available after you installed Anaconda, as administrator, then run the following code:&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;conda create -vv -n py35 python=3.5 jupyter  # py35 is the name of the environment, which can be arbitrary &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1.3. Activate the py35 env. :&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;# To activate this environment, use:

conda activate py35

# To deactivate an active environment, use:
conda deactivate&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2-install-hddm&#34;&gt;&lt;strong&gt;Step 2: install HDDM&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Now you have a python 3.5 environment, you can then install the HDDM package. Of course, you need to activate the py35 environment first. Then:&lt;/p&gt;
&lt;p&gt;2.1. Install HDDM by following code:&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;conda install -c pymc hddm  # (or conda install -c pymc python=3.5 hddm )
-proceed?: y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.2. Update kabuki, which is crucial package that HDDM depends on, to 0.6.2, otherwise models can not be saved). You can check the version of kabuki to make sure you do have installed 0.6.2&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;pip install -U --no-deps kabuki --ignore-installed

conda list # check the version of kabuki &lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3-use-hddm&#34;&gt;&lt;strong&gt;Step 3: use HDDM&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Now, we almost ready. A final step is to use an appropriate editor for editing and running the scripts. I used both jupyter lab (an updated version of jupyter notebook, but you can use jupyter notebook) and spyder. The script files of the former ends with “.ipynb”, the script files of the later one end with “.py”&lt;/p&gt;
&lt;p&gt;To use jupyter lab, if you like, you need to install jupyter lab in your py35 env. As follows:&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;
conda install jupyter lab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, changing the working directory of &lt;em&gt;anaconda prompt&lt;/em&gt; to the folder where you stored the scripts and data, and type &lt;em&gt;jupyter lab&lt;/em&gt; to open run jupyter lab. Note the (weird) way to change directory in windows system.&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;
cd /d c:\goodme\2_pilot_study\Results\4_hddm\  # in windows you have to add /d to change the directory

# run in jupyter lab or jupyter note book, for stim-based modelling

jupyter lab #(or jupyter notebook if you use jupyter notebook)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similarly, to run in spyder, you need to install spyder in this py35 env. &lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;conda install spyder&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, type &lt;em&gt;spyder&lt;/em&gt; to activate spyder&lt;/p&gt;
&lt;pre class=&#34;wp-block-code&#34;&gt;&lt;code&gt;spyder # you will need to change the working directory in the script.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Final note&lt;/strong&gt;: I know that there exists &lt;em&gt;the curse of knowledge&lt;/em&gt;, which means that I may assume you know what I know but you don’t. So please free feel to post comment or shout out on twitter (@hcp4715) to let me know if you encountered any problem when reproducing my analyses.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
